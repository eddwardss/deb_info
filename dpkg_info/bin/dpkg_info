#!/bin/bash

set -e

# Пути к нужным ресурсам — поменяй под свой путь!
DB_PATH="$(grep index ../xapian-index/index | cut -d ' ' -f2)"
DUMP_TERMS="../lib/dpkg_info/dump_terms.py"

usage() {
    echo "Использование:"
    echo "  $0 update"
    echo "  $0 info [--full] [--full-all] [--debug] [--lang=<language>] <package_name>"
    echo "  $0 search <query>"
    echo "  $0 group [--list-group]"
    echo "  $0 group [--list-package] [<group_name>]"
    echo "  $0 list"
    exit 1
}

if [[ $# -lt 1 ]]; then
    usage
fi

cmd="$1"
shift

case "$cmd" in
    update)
        PYTHONPATH="$(realpath ../lib/python3/dist-packages)" \
        AXI_DB_PATH="../xapian-index" \
        AXI_CACHE_PATH="../xapian-cache" \
        AXI_PLUGIN_PATH="$(realpath ../share/apt-xapian-index/plugins)" \
        python3 ../lib/dpkg_info/update-index.py
        ;;

    info)
        full=false
        full_all=false
        debug=false
        lang=""
        pkg_name=""

        while (( "$#" )); do
            case "$1" in
                --full)
                    full=true
                    shift
                    ;;
                --full-all)
                    full_all=true
                    shift
                    ;;
                --debug)
                    debug=true
                    shift
                    ;;
                --lang=*)
                    lang="${1#--lang=}"
                    shift
                    ;;
                --lang)
                    if [[ -n "$2" ]]; then
                        lang="$2"
                        shift 2
                    else
                        echo "Ошибка: флаг --lang требует аргумент"
                        exit 1
                    fi
                    ;;
                *)
                    if [[ -z "$pkg_name" ]]; then
                        pkg_name="$1"
                        shift
                    else
                        echo "Неожиданный аргумент: $1"
                        usage
                    fi
                    ;;
            esac
        done

        if [[ -z "$pkg_name" ]]; then
            echo "Ошибка: не указано имя пакета"
            usage
        fi

        if [[ -z "$lang" ]]; then
            lang="${LANG:-en}"
        fi

        lang="${lang%%.*}"

    cmd_args=("info" "$DB_PATH" "$pkg_name")
    if $full_all; then
        cmd_args+=(--full-all)
    elif $full; then
        cmd_args+=(--full)
    fi
    if $debug; then
        cmd_args+=(--debug)
    fi
    if [[ -n "$lang" ]]; then
        cmd_args+=(--lang "$lang")
    fi

        python3 "$DUMP_TERMS" "${cmd_args[@]}"
        ;;

    search)
        if [[ $# -lt 1 ]]; then
            echo "Ошибка: не указан поисковый запрос"
            usage
        fi
        query="$*"
        python3 ../lib/dpkg_info/search.py "$DB_PATH" "$query"
        ;;

    list)
        python3 ../lib/dpkg_info/list_packages.py "$DB_PATH"
        ;;

    group)
        if [[ $# -eq 0 ]]; then
            echo "Ошибка: укажите --list-groups или --list-packages <group_name>"
            exit 1
        fi
        args=()
        # Забираем все аргументы, кроме пути к базе
        while [[ $# -gt 0 ]]; do
            args+=("$1")
            shift
        done
        # Запускаем с командой group, всеми аргументами и в конце путь к базе
        python3 "$DUMP_TERMS" group "${args[@]}" "$DB_PATH"
        ;;

    *)
        echo "Неизвестная команда: $cmd"
        usage
        ;;
esac
